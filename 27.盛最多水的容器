给定 n 个非负整数 a1，a2，...，an，每个数代表坐标中的一个点 (i, ai) 。
在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0)。
找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。
说明：你不能倾斜容器，且 n 的值至少为 2。

示例:

输入: [1,8,6,2,5,4,8,3,7]
输出: 49

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/container-with-most-water
解题思路：我们在由线段长度构成的数组中使用两个指针，一个放在开始，一个置于末尾。
        此外，我们会使用变量来持续存储到目前为止所获得的最大面积。 
        在每一步中，我们会找出指针所指向的两条线段形成的区域，更新变量，并将指向较短线段的指针向较长线段那端移动一步。


知识点：1.双指针
       2.函数内定义函数

python实现：
class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        def waternum(list,i,j):
            short=min(list[i],list[j])
            return short*(j-i)
        if not height:return 0
        
        i=0
        j=len(height)-1
        maxwater=waternum(height,i,j)
        while(i<j):
            thiswater=waternum(height,i,j)
            if(thiswater>maxwater):
                maxwater=thiswater
            if(height[i]<height[j]):
                i+=1
            else:
                j-=1
        
        return maxwater
            
