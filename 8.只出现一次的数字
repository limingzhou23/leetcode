给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。
说明：
你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？
力扣  https://leetcode-cn.com/explore/featured/card/top-interview-questions-easy/1/array/25/

解题思路：限制是两点，一是线性复杂度，二是不能用额外空间，我们需要原地算法，技巧是使用异或的性质，相同的数字异或得0，就可以得到不同的那个
知识点：  异或的性质

python 实现：
class Solution(object):
    def singleNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        a=0
        for i in range(0,len(nums)):
            a^=nums[i]
        return a
        
