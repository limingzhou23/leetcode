判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。
示例 1:
输入: 121
输出: true

思路一：双向队列的操作
       先转化为字符串 然后压入双向队列
       每次取出队首和队尾的元素进行比较

    def isPalindrome(self, x):
        """
        :type x: int
        :rtype: bool
        """
        chardeque=collections.deque()

        for ch in str(x):
            chardeque.append(ch)

        stillEqual = True

        while len(chardeque)>1 and stillEqual:
            first = chardeque.pop()
            last = chardeque.popleft()
            if first != last:
                stillEqual = False

        return stillEqual
        
    
思路二：数学法
       反转整数的后一半 判断与前一半是否相同
       利用取余和整除来操作
        
        
        
            def isPalindrome(self, x):
        """
        :type x: int
        :rtype: bool
        """
        if x<0 or (x%10 == 0 and x !=0):
            return False

        reversenum=0
        while x>reversenum:
            a=x%10
            x=x//10
            reversenum=reversenum*10+a
        return x == reversenum or x== reversenum//10
