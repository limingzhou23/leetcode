一条包含字母 A-Z 的消息通过以下方式进行了编码：
'A' -> 1
'B' -> 2
...
'Z' -> 26
给定一个只包含数字的非空字符串，请计算解码方法的总数。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/decode-ways

示例 1:
输入: "12"
输出: 2
解释: 它可以解码为 "AB"（1 2）或者 "L"（12）。

解题思路：n个字母的编码数量的子问题是  dp[i]=dp[i-1]+dp[i-2] 因为1.第N个字母是1-9的数字，独立解码，此时数量是n-1的数量
                                                              2.第n个字母和第n-1组合，数量是n-2的子问题数量
                                     接下来搞好边界问题就可以了
知识点：1.表达式当作值来运算的方法
        2.字符类型与整形的转换
        3.字符类型的操作

python实现：
import numpy as np
class Solution(object):
    def numDecodings(self, s):
        """
        :type s: str
        :rtype: int
        """
        length=len(s)        
        dp=np.zeros(length+1,dtype=int)
        if(s[0]=='0'):
            return 0
        if(length==1):
            return 1
        
        dp[0]=1
        dp[1]=1
       
        for i in range(1,length):
            dp[i+1]=dp[i]*(s[i]!='0')+dp[i-1]*(9<int(s[i-1])*10+int(s[i])<=26)

        return dp[-1]
