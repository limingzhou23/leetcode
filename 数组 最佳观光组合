给定正整数数组 A，A[i] 表示第 i 个观光景点的评分，并且两个景点 i 和 j 之间的距离为 j - i。
一对景点（i < j）组成的观光组合的得分为（A[i] + A[j] + i - j）：景点的评分之和减去它们两者之间的距离。
返回一对观光景点能取得的最高分。

示例：
输入：[8,1,5,2,6]
输出：11
解释：i = 0, j = 2, A[i] + A[j] + i - j = 8 + 5 + 0 - 2 = 11

思路：暴力法：直接 但是会超时
    
     单循环 每次维护前面最高得分 和现在得分进行合并 维持一个最高分即可



class Solution(object):
    def maxScoreSightseeingPair(self, A):
        """
        :type A: List[int]
        :rtype: int
        """
        ans = 0
        premx=A[0]+0

        for i in range(1,len(A)):
            ans = max(ans,premx+A[i]-i)
            premx = max(premx,A[i]+i)

        return ans
