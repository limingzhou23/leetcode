给定一个数组 nums 和一个值 val，你需要原地移除所有数值等于 val 的元素，返回移除后数组的新长度。

不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/remove-element

思路：可以选择常见的双指针方法 运用快慢指针 和删除数组内重复元素类似 慢指针记录不等于目标值的元素 快指针用来遍历数组
     
     官方题解给的思路：遇到要移除的元素时 就和数组最后一个交换 同时将有效长度-1 但并不移向下一元素 以防交换来的元素也是要被移除的
                     不是要移除的元素就移向下一个元素



C++代码：
class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
        int i=0;
        int N=nums.size();
        while(i<N){
            if(nums[i]==val){
                nums[i]=nums[N-1];
                N--;
            }else{
                i++;
            }
            
        }
        return N;
    }
};
